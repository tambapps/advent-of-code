static final char ROUND = `O`
static final char EMPTY = `.`

private List<char> list = []
private int width
private int height

for (String line in Files.readLines('input.txt')) {
  if (width == 0) width = line.length()
  list << line
  height++
}

move(0, -1)
println("Part 1: " + computeLoad())

int cycleSize = 1
for (int i in 1..<1000000000) {
  switch (i % 4) {
    0 -> move(0, -1)
    1 -> move(-1, 0)
    2 -> move(0, 1)
    3 -> move(1, 0)
  }
}
println(this)
println("Part 2: " + computeLoad())

fun void move(int dirX, int dirY) {
  for (int y in (dirY < 0 ? 0..<height : (height - 1)..0)) {
    for (int x in (dirX < 0 ? 0..<width : (width - 1)..0)) {
      if (this[x, y] == ROUND) moveRock(x, y, dirX, dirY)
    }
  }
}

fun void moveRock(int startX, int startY, int dirX, int dirY) {
  int x = startX
  int y = startY
  while (((dirY == -1 && y > 0 || dirY == 1 && y < height - 1)
      || (dirX == -1 && x > 0 || dirX == 1 && x < width - 1))
    && this[x + dirX, y + dirY] == EMPTY) {
    x+= dirX
    y+= dirY
  }
  this[startX, startY] = EMPTY
  this[x, y] = ROUND
}

fun int computeLoad() {
  int sum = 0
  for (int y in 0..<height) {
    for (int x in 0..<width) {
      if (this[x, y] == ROUND) sum+= height - y
    }
  }
  return sum
}

fun char getAt(int x, int y) -> list[y * width + x]
fun char putAt(int x, int y, char c) -> list[y * width + x] = c

override fun String toString() {
  StringBuilder builder = new StringBuilder()
  for (int i in 0..<height) {
    builder.append(list[(i * height)..<((i + 1) * height)])
      .append('\n')
  }
  return builder.toString()
}