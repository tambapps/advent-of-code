static final char ROUND = `O`
static final char EMPTY = `.`

private list<char> list = []
private int width
private int height

for (String line in new File('input.txt').readLines()) {
  if (width == 0) width = line.length()
  list << line
  height++
}


move(0, -1)
println("Part 1: " + computeLoad())

for (long i in 1l..<1000000000l) {
  long percentage = 100l * i / 1000000000l
  print("\r$percentage")
  switch (i % 4l) {
    0l -> move(0, -1)
    1l -> move(-1, 0)
    2l -> move(0, 1)
    3l -> move(1, 0)
  }
}
println("Part 2: " + computeLoad())

fun void move(int dirX, int dirY) {
  for (int y in 0..<height) {
    for (int x in 0..<width) {
      if (this[x, y] == ROUND) moveRock(x, y, 0, -1)
    }
  }
}

fun void moveRock(int startX, int startY, int dirX, int dirY) {
  int x = startX
  int y = startY
  // TODO priority problem
  while ((((dirY == -1) && y > 0 || (dirY == 1) && y < height - 1)
      || ((dirX == -1) && x > 0 || (dirX == 1) && x < width - 1))
    && this[x + dirX, y + dirY] == EMPTY) {
    y+= dirY
  }
  this[startX, startY] = EMPTY
  this[x, y] = ROUND
}

fun int computeLoad() {
  int sum = 0
  for (int y in 0..<height) {
    for (int x in 0..<width) {
      if (this[x, y] == ROUND) sum+= height - y
    }
  }
  return sum
}

fun char getAt(int x, int y) -> list[y * width + x]
fun char putAt(int x, int y, char c) -> list[y * width + x] = c
