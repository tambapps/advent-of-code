def (list<long> timeLimits, list<long> distanceRecords) = [
  for String line in Files.readLines('input.txt') -> [
    for String it in line.substring(line.indexOf(':') + 1).trim().split('\\s+') ->
      it.toLong()
    ] as list<long>
  ]

/* part 1 */
int mul = 1
for (int i in 0..<timeLimits.size()) mul *= computeWays(timeLimits[i], distanceRecords[i])
println("Part 1: value=$mul")

/* part 2 */
def (long timeLimit, long distanceRecord) = [
  for String line in Files.readLines('input.txt') ->
    line.substring(line.indexOf(':') + 1).replaceAll(' ', '').toLong()
]
println("Part 2: value=" + computeWays(timeLimit, distanceRecord))

fun long computeWays(long timeLimit, long distanceRecord) {
  long start = 1
  while(start < timeLimit && computeDistance(timeLimit, start) <= distanceRecord) start++
  long end = timeLimit - 1
  while(end > start && computeDistance(timeLimit, end) <= distanceRecord) end--
  return end - start + 1
}

fun long computeDistance(long timeLimit, long loadingTime) {
  long remainingTime = timeLimit - loadingTime
  return loadingTime * remainingTime
}

