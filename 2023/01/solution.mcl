private static final Map MAPPINGS = [
  "1": `1`, "one": `1`,
  "2": `2`, "two": `2`,
  "3": `3`, "three": `3`,
  "4": `4`, "four": `4`,
  "5": `5`, "five": `5`,
  "6": `6`, "six": `6`,
  "7": `7`, "seven": `7`,
  "8": `8`, "eight": `8`,
  "9": `9`, "nine": `9`,
]

private int sum1 = 0
private int sum2 = 0

for (String line in Files.readLines('input.txt')) {
  // part 1
  char first1 = when char c in line -> c.isDigit()
  char last1 = when char c in line.reversed() -> c.isDigit()
  sum1 += toNumber(first1, last1)

  // part 2
  char first2 = findCalibrationDigits(line, 0..<line.length())
  char last2 = findCalibrationDigits(line, (line.length() - 1)..0)
  sum2 += toNumber(first2, last2)
}
println("Part 1: The sum of all of the calibration values is $sum1")
println("Part 2: The sum of all of the calibration values is $sum2")

// two digits to number
fun int toNumber(char firstDigit, char lastDigit) -> (firstDigit - `0`) * 10 + lastDigit - `0`

fun char findCalibrationDigits(String line, IntRange range) {
  for (int i in range) {
    String wordDigit = when String it in MAPPINGS.keySet() -> line?[i..<(i + it.length())] == it
    if (wordDigit != null) return MAPPINGS[wordDigit]
  }
  throw new RuntimeException()
}
