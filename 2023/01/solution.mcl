private static final Map WORD_DIGITS = [
  "one": `1`,
  "two": `2`,
  "three": `3`,
  "four": `4`,
  "five": `5`,
  "six": `6`,
  "seven": `7`,
  "eight": `8`,
  "nine": `9`,
]

private int sum1 = 0
private int sum2 = 0

for (String line in new File('input.txt').readLines()) {
  // part 1
  char first1 = line.findCharacter { it.isDigit() }
  char last1 = line.findLastCharacter { it.isDigit() }
  sum1 += toNumber(first1, last1)

  // part 2
  char first2 = findCalibrationDigits(line, 0..<line.length)
  char last2 = findCalibrationDigits(line, (line.length - 1)..0)
  sum2 += toNumber(first2, last2)
}
println("Part 1: The sum of all of the calibration values is $sum1")
println("Part 2: The sum of all of the calibration values is $sum2")

// two digits to number
fun int toNumber(char firstDigit, char lastDigit) -> (firstDigit - `0`) * 10 + lastDigit - `0`

fun char findCalibrationDigits(String line, IntRange range) {
  for (int i in range) {
    if (line[i].isDigit()) return line[i]
    String wordDigit = WORD_DIGITS.keySet().find { String it -> line?[i..<(i + it.length)] == it }
    if (wordDigit != null) {
      return WORD_DIGITS[wordDigit] as char
    }
  }
  throw new RuntimeException()
}
